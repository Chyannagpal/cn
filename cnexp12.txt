UDP Server in C- 
#include <stdio.h> 
#include <string.h> 
#include <stdlib.h> 
#include <unistd.h> 
#include <arpa/inet.h> 
#define PORT 8080   
int main() { 
int sockfd; 
char buffer[1024]; 
struct sockaddr_in server_addr, client_addr; 
socklen_t len; 
int n; 
if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) { 
perror("Socket creation failed")exit(EXIT_FAILURE); 
memset(&server_addr, 0, sizeof(server_addr)); 
memset(&client_addr, 0, sizeof(client_addr)); 
server_addr.sin_family = AF_INET;   
server_addr.sin_addr.s_addr = INADDR_ANY;   
server_addr.sin_port = htons(PORT);   
if (bind(sockfd, (const struct sockaddr *)&server_addr, sizeof(server_addr)) < 0) { 
perror("Bind failed"); 
close(sockfd); 
exit(EXIT_FAILURE); 
} 
printf("UDP Server is listening on port %d...\n", PORT); 
len = sizeof(client_addr);   
n = recvfrom(sockfd, (char *)buffer, 1024, MSG_WAITALL, (struct sockaddr 
*)&client_addr, &len); 
buffer[n] = '\0';   
printf("Received message from client: %s\n", buffer); 
close(sockfd); 
return 0; 
} 


UDP Client in C- 
#include <stdio.h> 
#include <string.h> 
#include <stdlib.h> 
#include <unistd.h> 
#include <arpa/inet.h> 
#define PORT 8080   
#define SERVER_IP "127.0.0.1"   
int main() { 
int sockfd; 
char *message = "Hello from the client!"; 
struct sockaddr_in server_addr; 
if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) { 
perror("Socket creation failed"); 
exit(EXIT_FAILURE); 
} 
memset(&server_addr, 0, sizeof(server_addr)); 
server_addr.sin_family = AF_INET; 
server_addr.sin_port = htons(PORT);  
server_addr.sin_addr.s_addr = inet_addr(SERVER_IP);   
sendto(sockfd, (const char *)message, strlen(message), MSG_CONFIRM, (const struct 
sockaddr *)&server_addr, 
sizeof(server_addr)); 
printf("Message sent from client: %s\n", message); 
close(sockfd); 
return 0; 
}